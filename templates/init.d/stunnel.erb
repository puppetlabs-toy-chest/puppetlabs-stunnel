#!/bin/bash
#
# This file is managed by Puppet.
#
# Init Script to run stunnel in daemon mode at boot time.
#
# Author: Riccardo Riva - RPM S.r.l.
# Contributer: Josh Preston
# Revision 1.1  -  2014 February, 6

#====================================================================
# Run level information:
#
# chkconfig: 2345 99 99
# description: Secure Tunnel <%= @name -%>
# processname: stunnel-<%= @name -%>
#
# Run "/sbin/chkconfig --add stunnel-<%= @name -%>" to add the Run levels.
# This will setup the symlinks and set the process to run at boot.
#====================================================================

#====================================================================
# Paths and variables and system checks.
PATH=/usr/bin:/usr/sbin

# Source function library
. /etc/rc.d/init.d/functions

# Check that networking is up.
#
[ ${NETWORKING} ="yes" ] || exit 0

# Path to the executable.
#
SEXE=stunnel

# Path to the configuration file.
#
CONF=<%= @conf_dir -%>/<%= @name -%>.conf

# Check the configuration file exists.
#
if [ ! -f $CONF ] ; then
 echo "The configuration [${CONF}] file cannot be found!"
 exit 1
fi

# Path to the lock file.
#
LOCK_FILE=<%= @lock_dir %>/stunnel-<%= @name -%>

#====================================================================

# Run controls:

prog=$"stunnel-<%= @name -%>"

RETVAL=0

# Start stunnel-<%= @name -%> as daemon.
#
start() {
 if [ -f $LOCK_FILE ]; then
 echo "stunnel-<%= @name -%> is already running!"
 exit 0
 else
 echo -n $"Starting $prog: "
 $SEXE $CONF
 fi

 RETVAL=$?
 [ $RETVAL -eq 0 ] && success
 echo
 [ $RETVAL -eq 0 ] && touch $LOCK_FILE
 return $RETVAL
}

# Stop stunnel-<%= @name -%>.
#
stop() {
 if [ ! -f $LOCK_FILE ]; then
 echo "stunnel-<%= @name -%> is not running!"
 exit 0

 else

 echo -n $"Shutting down $prog: "
 ps -ef | grep stunnel | grep $CONF | grep -v grep | awk '{ print $2 }' | xargs kill > /dev/null 2>&1
 RETVAL=$?
 [ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
 [ $RETVAL -eq 0 ] && echo "$prog stopped" || echo "$prog failed stopping"
 echo
 return $RETVAL

 fi
}

# See how we were called.
case "$1" in
 start)
 start
 ;;
 stop)
 stop
 ;;
 restart)
 stop
 start
 ;;
 condrestart)
 if [ -f $LOCK_FILE ]; then
 stop
 start
 RETVAL=$?
 fi
 ;;
 status)
 ps -ef | grep stunnel | grep $CONF | grep -v grep > /dev/null 2>&1
 RETVAL=$?
 [ $RETVAL -eq 0 ] && echo "$prog is running" || echo "$prog is stopped"
 ;;
 *)
 echo $"Usage: $0 {start|stop|restart|condrestart|status}"
 RETVAL=1
esac

exit $RETVAL
